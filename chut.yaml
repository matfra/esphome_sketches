esphome:
  name: chut-v0

esp32:
  board: lolin_s2_mini
  framework:
    type: arduino
    version: recommended
  variant: esp32s2

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

ota:
  safe_mode: true
  password: !secret ota_password

mqtt:
  broker: !secret mqtt_broker_ip

api:

logger:


globals:

  - id: esphome_sensitivity
    type: float
    initial_value: '36.5'
    restore_value: yes

  - id: esphome_volume
    type: int

#PINOUT 
#mic 1.6V avg amplitude: 0-3.2 ping GPIO1
#db attn required: 11dB ,ADC range 0-2.6V 

#screen
#DIN (mosi) 35
#CS 37
#CLK 39

spi:
  clk_pin: 39
  mosi_pin: 35

display:
  - platform: max7219digit
    cs_pin: 37
    num_chips: 1
    intensity: 7
    lambda: |-
      it.send64pixels(0, [
        [1, 0, 0, 0, 1, 0, 0, 1],\
        [0, 0, 0, 0, 1, 1, 0, 0],\
        [0, 0, 0, 0, 1, 0, 0, 0],\
        [0, 1, 0, 0, 1, 0, 0, 0],\
        [0, 0, 0, 0, 1, 0, 1, 0],\
        [0, 0, 0, 0, 1, 0, 0, 0],\
        [0, 1, 0, 0, 1, 0, 1, 0],\
        [1, 0, 0, 0, 1, 0, 0, 1]]);
font:
  - file: "pixelmix.ttf"
    id: digit_font
    size: 5
sensor:
  - platform: adc
    pin: 1
    attenuation: 11dB
    accuracy_decimals: 2
    id: esphome_v
    device_class: voltage
    unit_of_measurement: "V"
    update_interval: 1s
    raw: true
    filters:
      - lambda: |-
          unsigned int sample;
          unsigned long startMillis= millis(); 
          unsigned int signalMax = 0;
          unsigned int signalMin = 8191;
          while (millis() - startMillis < 500) {
            sample = analogRead(A1);
            if (sample < 8191){
                if (sample > signalMax){
                    signalMax = sample;
                }
                else if (sample < signalMin){
                    signalMin = sample;
                }
              }
          }
          return(signalMax - signalMin) ;  