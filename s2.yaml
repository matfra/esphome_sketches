esphome:
  name: chut-v0

esp32:
  board: lolin_s2_mini
  framework:
    type: arduino
    version: recommended
  variant: esp32s2

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

ota:
  safe_mode: true
  password: !secret ota_password

mqtt:
  broker: !secret mqtt_broker_ip

api:

logger:

globals:

  - id: esphome_sensitivity
    type: float
    initial_value: '36.5'
    restore_value: yes

  - id: esphome_volume
    type: int

#PINOUT 
#mic 1.6V avg amplitude: 0-3.2 ping GPIO1
#db attn required: 11dB ,ADC range 0-2.6V 

#screen
#DIN (mosi) 35
#CS 37
#CLK 39

spi:
  clk_pin: 39
  mosi_pin: 35

display:
  - platform: max7219digit
    cs_pin: 37
    num_chips: 1
    intensity: 7
    lambda: |-
      it.print(0, 1, id(digit_font), "HELLO!   ");
      it.scroll(true, max7219digit::CONTINUOUS, 100, 5000, 1500);
font:
  - file: "pixelmix.ttf"
    id: digit_font
    size: 6
sensor:
  - platform: adc
    pin: 1
    id: esphome_db
    device_class: signal_strength
    name: "Db SoundEsp"
    icon: "mdi:volume-vibrate"
    unit_of_measurement: "db"
    update_interval: 1s
    raw: true
    filters:
      - lambda: |-
          unsigned int sample;
          unsigned long startMillis= millis(); 
          float peakToPeak = 0; 
          unsigned int signalMax = 0;
          unsigned int signalMin = 8191;
          while (millis() - startMillis < 500) {
            sample = analogRead(A1);
            if (sample < 8191){
                if (sample > signalMax){
                    signalMax = sample;
                }
                else if (sample < signalMin){
                    signalMin = sample;
                }
              }
          }
          peakToPeak = map((signalMax - signalMin),1,8191,1.5,8191);
          id(esphome_volume) = peakToPeak;
          float state = id(esphome_sensitivity)*log10(peakToPeak)+15;  
          return(state);

  - platform: template
    name: "Volume SoundEsp"
    icon: "mdi:volume-high"
    unit_of_measurement: "%"
    update_interval: 1s
    lambda: return(map((id(esphome_db).state),15,150,0,100));

  - platform: template
    name: "RAW SoundEsp"
    icon: "mdi:volume-source"
    unit_of_measurement: "%"
    update_interval: 1s
    lambda: return(map(id(esphome_volume),1,8191,0,100));

number:
  - platform: template
    id: sensitivity_slider
    name: "Sensitivity SoundEsp"
    icon: "mdi:knob"
    update_interval: 1s
    initial_value: "36.5"
    step: 0.1
    min_value: 20
    max_value: 40
    mode: slider
    set_action:
      then:
        - lambda:  id(esphome_sensitivity) = x;